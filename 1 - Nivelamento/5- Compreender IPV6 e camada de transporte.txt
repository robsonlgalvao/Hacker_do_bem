Diferença IPV4 e IPV6

Ipv4 - 2^32 = 4.3bilhões de endereços

192.	 168.	  0.	   1
11000000.10101000.00000000.00000001-> 4 conjuntos de 8 bits total 32bits


Ipv6 -> 2^128 = 340undecilhões de endereços

2001:0002:0003:0004:0005:0006:0007:0008 
Composto por 8 hexadecatetos com 16bits cada hexadecateto com 128bit no total

hexadecimal
decimal	Binario	Hexadecimal
1	0001	1
2	0010	2
3	0011	3
4	0100	4
5	0101	5
6	0110	6
7	0111	7
8	1000	8
9	1001	9
10	1010	a
11	1011	b
12	1100	c
13	1101	d
14	1110	e
15	1111	f


2001:f0f0:dad0:cafe:0005:006:0007:0008

Verificar trafego: Wireshark

Cabeçalho 

IPV4
12 campos fixos - 20 a 60 bits de tamalho

versão
tamanho
tipo de serviço
Tamalho total
Identificação
Flag
Deslocamento do flagmento
Tempo de Vida(ttl)
Protocolo
Soma de verificação do cabecalho(Checksum)
endereço de origem
endereço de destino
Opções e complemento.

Ipv6 
8 campos fixos 40 bytes de tamanho(Cabeçalhos de extensão não são processados por roteadores intermediários)

Versão
Classes de trafego
Identificador de fluxo
Tamanho de dados
Proximo cabeçalho
Limite de emcaminhamento
Endereço de origem
Endereço de destino

Tipos de comunicação

Unicast - É o tipo de comunicação feita de um para um, é um endereçamento para um pacote feito a um único destino.

Anycast - Feita de uma interface para muitas outras da mesma região(mesmo endereço de rede)

Multcast - É quando um dispositivo se comunica com alguns receptores. É o método de transmissão de pacote de dados para múltiplos utilizado pelo IPV6.

Broadcast - Método de tranferência simultânea para Diversos receptores, é utilizado especificamente no IPV4


Tipos de endereços IPV6

Global unicast address - Semelhante ao IPV4 público

2000::/3

Unique Local address - Semelhante ao IPV4 privado

FC00::/7

Loopback -  Para auto teste ou acesso a um serviço localmente, Mesma função do IPV4 127.0.0.1

::1

Comandos

show IPV6 interface giga 0/0
cabo no console(Putty)
	
	show run - verificar se tem algo configurado.
	conf t - entrar nas configuração
	interface gigabitEthernet 0/0 (0/0 ou a porta que vc quer)
	ipv6 address fe::1 link-local - configurando ipv6 para fe::1
	no shutdown - fazer a porta subir(up)


Configurando Global unicast address(IPV6 GUA)

putty 
duvidas no comando colocar ? no final
ipv6 address 2001::1/64(parte de host)

show running-config - aparece a configuração feita nas portas

show ipv6 interface gigabitEthernet 0/0 - Mostra todas configurações da porta 0/0


Abreviação IPV6

quando tem um grande número de 0 pode se omitir

  1    2   3    4    5    6    7    8
2001:0df8:00f2:0000:0000:0000:0000:0f11

  1    2    3    8
2001:0df8:00f2::0f11

Outras abreviações

 1    2   3    4    5    6    7    8
2001:0df8:00f2:0000:0000:0000:0000:0f11

 1    2   3 4 5 6 7  8
2001:df8:f2:0:0:0:0:f11
 
 1    2   3 (4567)  8
2001:df8:f2:	  :f11


Sub-rede IPV6

2001	:0df8	   :00f2	:0000	:0000:0000:0000:0f11/64
16bits 	 16 bits   16 bits	16bits		64bits
		64bits

Quando tem /64 no final e referente aos primeiros 64 bits para identificar a rede e sobram 64 para endereçar dispositivos.

e se fossem 32bits para identificar rede? vamos ver?

2001	:0df8	:00f2:0000:0000:0000:0000:0f11/32
16bits	16bits			96bits


Qual primeiro e o outimo endereço para
2001:f0f0::/32

vamos lá
primeiro - 2001:f0f0:0000:0000:0000:00000:0000:0001 ou 2001:f0f0::1
último	 - 2001:f0f0:ffff:ffff:ffff:ffff:ffff:ffff

Sub-rede IPV6

2001:f0f0:dad0:cafe:	0000:0000:0000:0000/64
64bits porção rede	64bits para dispositivos



2001:f0f0:dad0:cafe:0000:0000:0000:0001/65 

sub-rede 1 - 2001:f0f0:dad0:cafe:(0000 até 7fff):0000:0000:0001/65
sub rede 2 - 2001:f0f0:dad0:cafe:(8000 até ffff):0000:0000:0001/65


e esse 2001:f0f0:dad0:cafe:0000:0000:0000:0001/66 ?
			   |
			 '00'00
			  || ||
			  84 21 cada bits as redes avancam em 8,4,2 ou 1

então no nosso exemplo

Subrede 1 2001:f0f0:dad0:cafe:(0000 até 3fff):0000:0000:0001/66
Subrede 2 2001:f0f0:dad0:cafe:(4000 até 7fff):0000:0000:0001/66
Subrede 3 2001:f0f0:dad0:cafe:(8000 até bfff):0000:0000:0001/66
Subrede 4 2001:f0f0:dad0:cafe:(c000 até ffff):0000:0000:0001/66

Agora 
2001:f0f0:dad0:cafe:0000:0000:0000:0001/67

Subrede 1 2001:f0f0:dad0:cafe:(0000 até 1fff):0000:0000:0001/67
Subrede 2 2001:f0f0:dad0:cafe:(2000 até 3fff):0000:0000:0001/67
Subrede 3 2001:f0f0:dad0:cafe:(4000 até 5fff):0000:0000:0001/67
Subrede 4 2001:f0f0:dad0:cafe:(6000 até 7fff):0000:0000:0001/67
Subrede 5 2001:f0f0:dad0:cafe:(8000 até 9fff):0000:0000:0001/67
Subrede 6 2001:f0f0:dad0:cafe:(a000 até bfff):0000:0000:0001/67
Subrede 7 2001:f0f0:dad0:cafe:(c000 até dfff):0000:0000:0001/67
Subrede 8 2001:f0f0:dad0:cafe:(e000 até ffff):0000:0000:0001/67


Camada 4: transporte
Segmentação dos dados, multiplexação e remonta segmentos no destino 

Comando 
netstat -na
Mostra as conexões ativas

Funções da camada de tranporte
Mantém e monitora várias camadas entre aplicações.
Identifica aplicações por meio de portas.
segmenta dados das camadas superiores.

portas

saindo ateatória(57358)  -> web https(443), http(80),  email(110), vídeo conferência(3478ou3481)

C:\Windows\system32\drives\etc\services

ftp	-20/21
ssh	-22
telnet	-23
smtp	-25
dns	-53
tftp	-69
http	-80
https	-443
sntp	-161

Total de portas TCP:65535
Total de portas UDP:65535
Até a porta 1024: serviços mais comuns
de 1025 a 65535: Conhecidas como portas altas

Principais protocolos TCP e UDP

TCP - (Transport Control Protocol)

Característica - Trabalha com segmentos

Confiável 
Orientado a conexão
Confirma os dados recebidos
Reenvia dados perdidos
Reorganiza os dados segmentados
Controle de fluxo

Aplicações
RDP
HTTP
SSH

Multiplexação
Segmentar(picota) dados para envio
Remontar os dados segmentados recebidos na ordem correta

Conexão em 3 vias(Three-way Handshake)

programa wireshark verifica analize na rede

SYN -  Pedido de sincronismo

Janelamento

ataque SYN TCP
sobrecarregar servidor de requisições SYN para o usuário ficar fora ou servidor cair

Algumas aplicações que trabalham com TCP e UDP
porta TCP porta-443= chat de texto
porta UDP porta-45000-60000= chat de voz
exemplo: discord

Controle de fluxo
manda pedidos de syn e espera retorno na ordem
caso servidor mande um ack segunte o tcp vai entender que o anterior foi entregue
exemplo: mandou 0, sevidor respondeu ack0, mandou 1,2,3 servidor respondeu com ack3 o tcp entendo que o 1 e 2 foram recebidos e continua na ordem, quando servidor não recebeu ele manda um nack


protocolo UDP - (User datagram protocol)

caracteristicas
prioriza velocidade
Não confirma se vc recebeu

TCP	              vs	 		UDP

lento					rápido
garante entrega				não garante
retransmissão de dados			Dados perdidos não são reenviados

		utilizados em:
Serviços web				Tranmissões ao vivo
e-mail					Jogos online
FTP					Video conferência

		Cabeçalho:

Variável 20 a 80 byte/12campos		Variável fixo:8 bytes/4campos

		Portas:

65536					65536




