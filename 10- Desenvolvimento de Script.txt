Scripts windows

Codigo desenvolvido para automatizar uma operação

Automação
Padronização de processos
Gerenciamento de Sistemas e Redes
Manipulação de Dados
Personalização e Extensibilidade
Redução de Erros Eficiência e Produtividade

Powershell 
Batch
VBScript
JavaScript

Vantagens

Agilidade	- Automatiza tarefas
Flexibilidade	- pode ser adaptado
Portabilidade	- Executável em difarentes plataformas
Integração	- Comunica-se com outros programas, usando bibliotecas externas


Riscos	- Malware, vulnerabilidade e permissões elevadas
Boa prática:
Verificar origem, integridade, analisar conteúdo e comportamento, limitar permissões e recursos, atualizar e proteger sistemas

#script para listar processos em execução

Get-Process | Format-Table -AutoSize

#script para criar um arquivo zip com os arquivos de uma pasta

$source = "C:\Users\user\Documents"
$destination = "C:\Users\userDocuments.zip"

#scripts para enviar um email

$Outlook = New-Object -ComObject Outlook.Application
$Mail = $Outlook.CreateItem(0)
$Mail.To = "destinatio@mail.com"
$Mail.Subject = "Assunto do Email"
$Mail.Body = "Corpo do email"
#Mail.Send()

 
Batch

::script para exibir a data e a hora atuais

echo %date% %time%

::Script para criar um arquivo para outra pasta

copy C:\Users\user\file.txt D:\Backup\file.txt

::Script para executar um ping em um site
ping www.bing.com


VBScript

'script para exibir uma msg na tela

MsgBox "Olá mundo!"

'script para abrir o internet explorer e navegar para um site

Set objIE = CreateObject("InternetExplorer.Application")
objIE.Visible = True
objIE.Navigate "http://www.bing.com"

'script para criar uma pasta no desktop

Set objFSO = CreateObject("Scripting.FileSystemObject")
strDesktop = objFSO.GetSpecialFolder(0)
objFSO.CreateFolder strDesktop & "\Nova Pasta"

JavaScript

//script para exibir uma msg na tela

WScript.Echo("Olá mundo");

//Script para criar um arquivo de texto no desktop

var fso = new ActiveXObject("Scripting.FileSystemObject");
var desktop = fso.CreateTextFile(desktop + "\\Arquivo.txt",true);
file.write("Este é um texto criado por um script");
file.Close();

//script para abrir Notepad e escrever algo nele

var shell = new ActiveXObject("WScript.shell");
shell.Run("notepad.exe");
WScript.sleep(1000);
shell.SendKeys("Este é um texto escrito por um script");

Tecnicas Avançadas

Parâmetros e argumentos

Permite os scripts mais flexíveis e reutilizáveis adapdando-se em diferentes situações

Funções e módulos
estrituras condicionais
espreções reculares
usar bibliotecar externas

inicio

batch
abra o cmd e digite

set nome=João
echo Olá %nome%

Calculo

set a=5
set b=4
set /a "c=%a%+%b%"

echo O resultado é: %c%

Operações relacionais

@set n1=5
@set n2=2

if %n1% gtr %n2% (echo o número 1 é maior que o número 2.) else if %n1% lss %n2%(echo Os números são iguais)



Manipulação de Arquivos

REM Criar uma parta chamada "MinhaPasta"

mkdir MinhaPasta

REM Criar arquivo txt

type nul> meu arquivo.txt

REM Copiar um arquivo chamado"meuarquivo.txt" para a pasta

copy meuarquivo.txt MinhaPasta

REM Mover a pasta "MinhaPasta" para outro local

move MinhaPasta novalocalizacao\MinhaPasta

REM Renomear o arquivo dentro da pasta

ren NovaLocalizacao\MinhaPasta\meuarquivo.txt NovoNomedeArquivo.txt


REM Deletar A pasta e seu conteúdo

rmdir /s /q localizacao\MinhaPasta


Power Shell

Write-host "Hello, Word"

if($a -gt $b){
	
	Write-Host "A é maior que B"

} else {

	Write-Host"B é maior que A"

for ($i=1;$i-le 5,$i++){

	Write-Host"Iteração $i"

}


Função 

function Saudacao{param ([string]$nome) Write-Host "Olá, $nome!"}

#Chamada função

Saudacao -nome "Amigo"


function Saudacao {
	param(
		[string]$nome,
		[string]$cumprimento
	)
	write-host "$cumprimento,$nome!"
}

#chamando Função

Saudacao -nome "Amigo"
Saudacao -nome "Amigo" -cumprimento "Bom dia"


